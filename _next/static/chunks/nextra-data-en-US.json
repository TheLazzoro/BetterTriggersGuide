{"/download":{"title":"Download","data":{}},"/":{"title":"Better Triggers","data":{"":"A custom trigger editor for Warcraft III: Reforged","what-is-this#What is this?":"This is a custom, 3rd party trigger editor built from scratch.Unlike plugins like Jass NewGen Pack 2 (JNGP), TESH and similar, this trigger editor is completely separate and works outside the World Editor.\r\nIt expands with new features and aims to improve the user experience for both GUI users and scripters.To support the new features this editor does not bundle trigger data (.wtg) with your map, but saves the data in a project folder in your filesystem.\r\nThis also means you cannot swap back and forth between this editor and the World Editor's trigger editor.\r\nAlthough, it is possible to port existing triggers from a map to this editor from the 'New Project' window.","feature-highlights#Feature Highlights":"","source-files-outside-your-map#Source files outside your map":"","convert-an-existing-maps-triggers#Convert an existing map's triggers":"","script-live-update#Script live update":"","upgraded-script-editor#Upgraded Script Editor":"","starcraft-ii-inspired-gui#\"StarCraft II\"-inspired GUI":"","local-variables-in-gui#Local Variables in GUI":"","2d-arrays#2D Arrays":"","frames-in-gui#Frames in GUI":"","improved-gui-to-custom-script-conversion#Improved GUI to custom script conversion":"","improved-gui-to-custom-script-conversion-1#Improved GUI to custom script conversion":"","planned-features#Planned features":"Trigger template/library importer.\nKeybinding menu.\nAction- and condition definitions: Define your own re-usable actions and conditions.\nMore natives in GUI.\nLocal variables.\nEditor color themes.\nand more..."}},"/guide":{"title":"Guide","data":{"requirements#Requirements":"Windows 7 or greater\n.NET 6.0 Desktop Runtime x64\nWarcraft III 1.32.0 or greater","installation#Installation":"Download and extract the tool anywhere in your filesystem.\nRun 'Better Triggers.exe' to launch the program.\nWhen launching for the first time it will ask you to locate your Warcraft III installation directory.  Example: 'C:\\User\\Program Files\\Warcraft III'.\nYou're now ready and set!","create-a-project#Create a project":"To create a project select 'File -> New Project' in the top menu.You have the option to create an empty project or copy all triggers from an existing map.\r\nCreating an empty map will generate a new map in the 'map' directory with empty triggers.When creating a project with existing triggers from a map the tool will extract all folders, triggers, variables, and scripts\r\ninto the 'src' folder in your project. Comments in the Trigger Explorer menu are ignored.\nNOTE: If you're copying triggers from a map that contains variables with upper-/lower case variations of the same name\r\ne.g. \"myVar\" and \"MyVar\" the latter ones will be renamed.\r\nThis is because the filesystem isn't case sensitive by default and conflicts would occur.As a result, you may experience compile errors after porting.\nCreating a new project generates a folder with a project file and three subfolders:\nThe project file contains essential information about your project, and is the file you should point to when opening a project.\nThe 'map' folder is not required, but it is the default map location when creating a new project.\nThe 'src' folder contains all source files i.e. triggers, variables, scripts etc.\nThe 'dist' folder contains the final map when you click 'Export Map'.","trigger-explorer#Trigger Explorer":"The trigger explorer in this trigger editor works a lot different than the one in the World Editor,\r\nin the way that it's actually a live view of your filesystem from your src folder. \nNOTE: While you can certainly copy-paste files and entire folders of content in Windows Explorer, it is\r\nrecommended you do these operations through the trigger explorer in Better Triggers. The generated script will\r\ncreate triggers and variables with names based on filenames, and if two variables\r\nor triggers have the same name it will cause script errors. This will not happen when copy-pasting through\r\nBetter Triggers, since the editor will properly rename your files.However, script files (.j and .lua) are not affected by this.\nThe main benefit of this being a live filesystem view is that you can work directly in an external text/code editor\r\nwithout the need to copy-paste the contents into the editor like we are used to in the World Editor:\nExternal changes to your scripts are automatically picked up by the editor. This is exclusive to .j and .lua files.\r\nContent changes to trigger and variable files will not be picked up by the editor, but it's generally not recommended\r\nto edit those anyway.","expanded-gui-tips#Expanded GUI Tips":"","local-player#Local Player":"Better Triggers has implemented 'GetLocalPlayer' in GUI.\r\nThis should only be used in if-then-else actions like so:\nIt's generally not recommended to use 'Local Player' if you're unfamiliar with it, as it's the number 1 cause of desyncs.\r\nHowever, it enables you to do a lot of things, like displaying UI elements (frames) on a per player basis.","frames#Frames":"Since Blizzard has not implemented a generic event for frames, Better Triggers has done a workaround to bring\r\nframe natives to GUI triggers. The generic frame event actually uses 'TriggerRegisterVariableEvent' under the hood,\r\nbut is made more user-friendly for GUI users. There are a few points to make about this:When referring to the player that triggered the event you cannot use 'Triggering Player' or 'GetTriggerPlayer()'.\r\nYou must use 'Triggering Frame Player' or 'GetTriggerFramePlayerBT()' as shown here:\nThis is also the case for a number of other natives, though is mostly relevant for scripting:\n'GetTriggerFrame()' -> 'GetTriggerFrameBT()'\n'BlzGetTriggerFrameEvent()' -> 'GetTriggerFrameEventBT()'\n'BlzGetTriggerFrameValue()' -> 'GetTriggerFrameValueBT()'\n'BlzGetTriggerFrameText()' -> 'GetTriggerFrameTextBT()'\nOther than that you use the frame natives in GUI just like you would in scripting. \r\nE.g. you show/hide frames for individual players showing/hiding them inside a 'Local Player' if-statement:\nThe above GUI trigger generates the following script:\n//****************************************************************************\r\n//*  Trigger Untitled_Trigger\r\n//****************************************************************************\r\nfunction If_Trig_Untitled_Trigger_0 takes nothing returns boolean\r\n\tif (not(GetTriggerFramePlayerBT() == GetLocalPlayer())) then\r\n\t\treturn false\r\n\tendif\r\n\treturn true\r\nendfunction\r\n\r\nfunction Trig_Untitled_Trigger_Conditions takes nothing returns boolean\r\n\tif (not(GetTriggerFrameBT() == udg_frameButton)) then \r\n\t\treturn false\r\n\tendif\r\n\tif (not(GetTriggerFramePlayerBT() == Player(0))) then \r\n\t\treturn false\r\n\tendif\r\n\treturn true\r\nendfunction\r\n\r\nfunction Trig_Untitled_Trigger_Actions takes nothing returns nothing\r\n\tif (If_Trig_Untitled_Trigger_0()) then\r\n\t\tcall BlzFrameSetVisibleBT(false, GetTriggerFrameBT())\r\n\telse\r\n\tendif\r\nendfunction\r\n\r\n//****************************************************************************\r\nfunction InitTrig_Untitled_Trigger takes nothing returns nothing\r\n\tset gg_trg_Untitled_Trigger = CreateTrigger()\r\n\tcall TriggerRegisterGenericFrameEventBT(gg_trg_Untitled_Trigger, 1.0, EQUAL, \"bt_genericFrameEvent\")\r\n\tcall TriggerAddCondition(gg_trg_Untitled_Trigger, Condition(function Trig_Untitled_Trigger_Conditions))\r\n\tcall TriggerAddAction(gg_trg_Untitled_Trigger, function Trig_Untitled_Trigger_Actions)\r\nendfunction\n-----------------------------------------------------------------------------\r\n--  Trigger Untitled_Trigger\r\n-----------------------------------------------------------------------------\r\nfunction If_Trig_Untitled_Trigger_0()\r\n\tif (not(GetTriggerFramePlayerBT() == GetLocalPlayer())) then\r\n\t\treturn false\r\n\tend\r\n\treturn true\r\nend\r\n\r\nfunction Trig_Untitled_Trigger_Conditions()\r\n\tif (not(GetTriggerFrameBT() == udg_frameButton)) then\r\n\t\treturn false\r\n\tend\r\n\tif (not(GetTriggerFramePlayerBT() == Player(0))) then\r\n\t\treturn false\r\n\tend\r\n\treturn true\r\nend\r\n\r\nfunction Trig_Untitled_Trigger_Actions()\r\n\tif(If_Trig_Untitled_Trigger_0()) then\r\n\t \tBlzFrameSetVisibleBT(false,GetTriggerFrameBT())\r\n\telse\r\n\tend\r\nend\r\n\r\n-----------------------------------------------------------------------------\r\nfunction InitTrig_Untitled_Trigger ()\r\n\tgg_trg_Untitled_Trigger = CreateTrigger()\r\n \tTriggerRegisterGenericFrameEventBT(gg_trg_Untitled_Trigger, 1.0, EQUAL, \"bt_genericFrameEvent\") \r\n\tTriggerAddCondition(gg_trg_Untitled_Trigger, Condition( Trig_Untitled_Trigger_Conditions))\r\n\tTriggerAddAction(gg_trg_Untitled_Trigger, Trig_Untitled_Trigger_Actions)\r\nend\nFor a more in-depth guide on how to use frames refer to Tasyen's tutorial:\r\nTypes of Frames"}}}